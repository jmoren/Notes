#help_area
  .help_wrap
    %h2
      Que quiero anotar?
    %p
      Las notas sirven para compartir conocimiento, o como ayuda memoria en el trabajo 
      Puedo postear una solucion a algun problema que me haya encontrado en el proyecto, 
      o algo que algun compaÃ±ero haya preguntado, algo interesante que me haya encontrado 
      en la red.
      
    %p
      Tratamos que escriban la situacion por la cual empezaron a buscar y la solucion encontrada, 
      asi otro que se encuentre en la misma situacion, podra usar lo que otros hayan encontrado. Se
      pueden comentar, para corregir, agradecer, proponer variantes, etc.
    %p
      Para citar codigo, por el momento un solo bloque de codigo por nota, tenemos que dejar una linea en blanco 
      antes y otra despues, y poner el codigo entre tres arrobas
      %br
      %blockquote
        @@@ lang
        %br
        "CODIGO"
        %br
        @@@
      %br
      Reemplazamos 
      %em lang 
      por el lenguaje que estamos utilizando
  %br    
  .help_wrap
    %h2
      Lenguajes disponibles
    Los lenguajes disponibles para que se vean coloreados, son:
    %b Java, Javascript, Php, Ruby, Cpp
#nota_form
  #new_note_title
    - if @nota.new_record?
      New Note
    - else
      Edit Note
  = form_for @nota do |f|
    %p
      %span= f.label :title
      %br
      = f.text_field :title, :size => 63, :class => "required", :minlength => "3"
    %p
      %span= f.label :tag_list
      %br
      = text_field_tag :tag_list, @nota.tag_list.join(', ')  , :id => "all_tags", :size => 63
    %p
      %div= f.label :body, "Note"
      = f.text_area :body, :cols => 81, :rows => 33, :class => "required", :minlength => "10"
      =# f.cktext_area :body, :width => '90%', :height => '250px', :class => 'inputs'
    #submit_form_buttons
      %span= link_to 'Cancel',notas_path,:id => "link_cancel"
      %span= f.submit 'Save Note', :id => "submit_button"
    .clear


:javascript
  $(function() {
  function split( val ) {
  return val.split( /,\s*/ );
  }
  function extractLast( term ) {
  return split( term ).pop();
  }

  $("#all_tags")
  // don't navigate away from the field on tab when selecting an item
  .bind( "keydown", function( event ) {
  if ( event.keyCode === $.ui.keyCode.TAB &&
  $( this ).data( "autocomplete" ).menu.active ) {
  event.preventDefault();
  }
  })
  .autocomplete({
  source: function( request, response ) {
  $.getJSON( "#{all_tags_notas_path}", {
  term: extractLast( request.term )
  }, response );
  },
  search: function() {
  // custom minLength
  var term = extractLast( this.value );
  if ( term.length < 2 ) {
  return false;
  }
  },
  focus: function() {
  // prevent value inserted on focus
  return false;
  },
  select: function( event, ui ) {
  var terms = split( this.value );
  // remove the current input
  terms.pop();
  // add the selected item
  terms.push( ui.item.value );
  // add placeholder to get the comma-and-space at the end
  terms.push( "" );
  this.value = terms.join( ", " );
  return false;
  }
  });
  });
:javascript
  $(document).ready(function(){
  $("#new_nota").validate();
  });

